name: Scheduled Health Check

# Controls when the action will run.
on:
  workflow_dispatch: {}
  schedule:
    - cron: '30 * * * *'

jobs:
  health_check_job:
    runs-on: ubuntu-latest
    name: Health Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Health Check Script
        id: health_check
        working-directory: src/public
        run: |
          success_codes=("200" "201" "202" "203" "204" "205" "206" "207" "208" "226" "300" "301" "302" "303" "304" "305" "306" "307" "308")

          urls=$(yq e '.urls[].url' config.yaml)
          keys=$(yq e '.urls[].key' config.yaml)
          echo "[urls]: $urls"
          echo "[keys]: $keys"

          mkdir -p logs

          i=0
          failed_urls=()
          for url in $urls; do
            i=$((i+1))
            echo "[i]: $i"
            echo "[url]: $url"
            key=$(echo $keys | cut -d' ' -f$i)
            echo "[key]: $key"

            response=$(curl -s -o /dev/null -w "%{http_code}" $url)
            echo "[response]: $response"

            result="failure"
            
            if [[ ${success_codes[@]} =~ $response ]]; then
              result="success"
            fi
            echo "[result]: $result"

            date_time=$(date +'%Y-%m-%d %H:%M')
            echo "[date_time] $date_time"
            echo $date_time, $result >> "logs/${key}_report.log"

            tail -n 10 logs/${key}_report.log

            if [ $result == "failure" ]; then
              failed_urls+=($url)
            fi

          done

          echo "[failed_urls]: $failed_urls"
          echo "failed_urls='$failed_urls'" >> $GITHUB_OUTPUT

      - name: Git commit logs
        working-directory: src/public
        run: |
          echo "[git commit logs...]"
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add logs/*
          git commit -m "chore: update logs"
          git push

      - name: Create GitHub Issue
        if: ${{ steps.health_check.outputs.failed_urls != '' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const failed_urls = '${{ steps.health_check.outputs.failed_urls }}'
            console.log(failed_urls)
            github.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: "Health Check Report",
              body: "Broken Site () was down:\nHTTP code: 0\nResponse time: 0 ms",
            });
