name: Scheduled Health Check

# Controls when the action will run.
on:
  workflow_dispatch: {}
  schedule:
    - cron: '30 * * * *'

jobs:
  health_check_job:
    runs-on: ubuntu-latest
    name: Health Check
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run Health Check Script
        id: health_check
        working-directory: src/public
        run: |
          success_codes=("200" "201" "202" "203" "204" "205" "206" "207" "208" "226" "300" "301" "302" "303" "304" "305" "306" "307" "308")

          urls=$(yq e '.urls[].url' config.yaml)
          keys=$(yq e '.urls[].key' config.yaml)
          names=$(yq e '.urls[].name' config.yaml)
          echo "[urls]: $urls"
          echo "[keys]: $keys"
          echo "[names]: $names"

          mkdir -p logs

          i=0
          failed_checks=""
          for url in $urls; do
            i=$((i+1))
            echo "[i]: $i"
            key=$(echo $keys | cut -d' ' -f$i)
            name=$(echo $names | cut -d' ' -f$i)
            echo "[url]: $url"
            echo "[key]: $key"
            echo "[name]: $name"

            response=$(curl -s -o /dev/null -w "%{http_code}, %{time_total}" $url)
            echo "[response]: $response"

            response_code=$(echo $response | cut -d',' -f1)
            echo "[response_code]: $response_code"

            response_time=$(echo $response | cut -d',' -f2)
            echo "[response_time]: $response_time"

            result="failure"
            if [[ ${success_codes[@]} =~ $response_code ]]; then
              result="success"
            fi
            echo "[result]: $result"

            date_time=$(date +'%Y-%m-%d %H:%M')
            echo "[date_time] $date_time"
            echo $date_time, $result >> "logs/${key}_report.log"

            tail -n 10 logs/${key}_report.log

            if [ $result == "failure" ]; then
              failed_checks="echo $failed_checks | printf '{"key":"%s","name":"%s","url":"%s", "response_time":"%s", "response_code":"%s"}\n' $key $name $url $response_time $response_code"
            fi

          done

          echo "[failed_checks]: $failed_checks"
          echo "failed_checks='$failed_checks'" >> $GITHUB_OUTPUT

      - name: Git commit logs
        id: commit
        working-directory: src/public
        run: |
          echo "[git commit logs...]"
          git config --local user.name 'github-actions[bot]'
          git config --local user.email 'github-actions[bot]@users.noreply.github.com'
          git add logs/*
          git commit -m "chore: update logs"
          git push

          hash=$(git rev-parse HEAD)
          echo "[hash]: $hash"
          echo "hash='$hash'" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue
        if: steps.health_check.outputs.failed_checks != ''
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "[get outputs...]"
          failed_checks=${{ steps.health_check.outputs.failed_checks }}
          echo "[failed_checks]: $failed_checks"
          commit_hash=${{ steps.commit.outputs.hash }}
          echo "[commit_hash]: $commit_hash"
          commit_short_hash=${commit_hash:0:7}
          echo "[commit_short_hash]: $commit_short_hash"
          commit_url="https://github.com/Harbour-Enterprises/Harbour-StatusPage/commit/$commit_hash"
          echo "[commit_url]: $commit_url"

          echo "[create github issue...]"
          gh issue create \
          --title "Health Check Failed" \
          --body "In [$commit_short_hash]($commit_url), Harbour API (https://test.com) was down:\nHTTP code: 404\nResponse time: 4.7 ms"
